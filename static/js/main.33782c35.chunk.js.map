{"version":3,"sources":["components/Navbar.js","components/Main.js","components/Main_User.js","components/Main_Paid.js","components/About.js","components/Verified.js","components/Opensource.js","components/App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","react_router_dom","to","href","target","rel","id","this","props","account","width","height","src","concat","Identicon","toString","Component","Main","window","ethereum","web3","Web3","enable","currentProvider","alert","param","adminform","resolvebutton","_this","eth","getAccounts","onSubmit","event","preventDefault","proposition","betproposition","value","odds","betodds","gasfees","adminfees","genesiscost","genesiscostX","Math","pow","createyesnobet","type","ref","input","placeholder","required","defaultValue","role","style","maxWidth","bets","map","bet","key","stats","_id","_betbalance","_yesvotes","_genesisvotes","_novotes","_resolver","_betaddress","utils","toChecksumAddress","_proposition","_yeswagers","toFixed","_genesiscost","_yesodds","_nowagers","_noodds","tests","test","_betindex","toNumber","_isyes","_player","_specificindex","_playeryesvotes","_playeryesbalance","_time","betID","player","revertyes","_isno","_playernovotes","_playernobalance","revertno","betyesAmount","betyesAmountX","betIndex","betyes","betnoAmount","betnoAmountX","betno","betoutcome","outcome","setoracle","outcomeswitch","_outcome","resolve","i","_yesplayers","_noplayers","About","Wrap","styled","div","_templateObject","Primary","_templateObject2","Block","_templateObject3","Verified","Verified_templateObject","Verified_templateObject2","Verified_templateObject3","Opensource","Opensource_templateObject","Opensource_templateObject2","Opensource_templateObject3","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","createBet","betCount","loading","bind","assertThisInitialized","loadWeb3","loadBlockchainData","accounts","setState","net","getId","networkId","networkData","CreateBet","networks","Contract","abi","address","methods","index","bettorindex","bettorCount","stat","toConsumableArray","ii","sort","b","_this2","send","from","once","receipt","betAmount","_this3","_this4","_this5","_this6","_this7","_this8","components_Navbar","react_router","exact","path","element","components_Main","Main_Paid","components_About","components_Verified","components_Opensource","Main_User","Boolean","location","hostname","match","ReactDOM","render","basename","process","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.33782c35.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Identicon from 'identicon.js';\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Navbar extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\r\n        <Link to=\"/\">\r\n        <a\r\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\r\n          href=\"\"\r\n          target=\"_self\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Contraqtual\r\n        </a>\r\n        </Link>\r\n        <ul className=\"navbar-nav px-3\">\r\n          <li> <Link to=\"/\">\r\n            <small className='navlink'>\r\n            Open bets\r\n            </small>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"navbar-nav px-3\">\r\n          <li> <Link to=\"/Paid_out\">\r\n            <small className='navlink'>\r\n            Paid out\r\n            </small>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"navbar-nav px-3\">\r\n          <li> <Link to=\"/about\">\r\n            <small className='navlink'>\r\n            About\r\n            </small>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"navbar-nav px-3\">\r\n          <li> \r\n            <small className='navlink'>\r\n            <href id=\"whitelink\"> <a id = \"whitelink\" href=\"https://jeangalt1957.github.io/DUsocial/\"> \r\n            Message Board </a></href> \r\n            </small>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"navbar-nav px-3\">\r\n          <li> <Link to=\"/verified\">\r\n            <small className='navlink'>\r\n            Verified contract\r\n            </small>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"navbar-nav px-3\">\r\n          <li> <Link to=\"/opensource\">\r\n            <small className='navlink'>\r\n            GitHub\r\n            </small>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"navbar-nav px-3\">\r\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\r\n            <small className=\"text-secondary\">\r\n            <small id=\"account\">{this.props.account}</small>\r\n            </small>\r\n            { this.props.account\r\n              ? <img\r\n                className='ml-2'\r\n                width='30'\r\n                height='30'\r\n                src={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`}\r\n              />\r\n              : <span></span>\r\n            }\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\nimport Identicon from 'identicon.js';\r\nimport Web3 from 'web3';\r\nclass Main extends Component {\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n  }\r\n  outcomeswitch(param) {\r\n    switch(param) {\r\n      case 0:\r\n        return 'No';\r\n      case 1:\r\n        return 'Yes';\r\n      case 2:\r\n        return 'Push';\r\n      case 3:\r\n        return 'TBD';\r\n    }\r\n  }\r\n\r\n  render () {    \r\n    const web3 = window.web3\r\n    const accounts = web3.eth.getAccounts()\r\n    var i = 0;\r\n    let adminaddress;\r\n    adminaddress = '0x496764D595FBFC752FB73416759406e296b68851'; // revise to actual admin!\r\n    let adminform;\r\n        adminform =  <form onSubmit={(event) => {\r\n          event.preventDefault()\r\n          const proposition = this.betproposition.value\r\n          const odds = this.betodds.value\r\n          const gasfees = this.gasfees.value\r\n          const adminfees = this.adminfees.value\r\n          const genesiscostY = this.genesiscostX.value * 10**18\r\n          const genesiscost = genesiscostY.toString()\r\n          this.props.createyesnobet(proposition, odds, gasfees, adminfees, genesiscost)\r\n        }}>\r\n        <div className=\"form-group mr-sm-2\">\r\n          <input\r\n            id=\"betproposition\"\r\n            type=\"text\"\r\n            ref={(input) => { this.betproposition = input }}\r\n            className=\"form-control\"\r\n            placeholder=\"Yes / no proposition...\"\r\n            required />\r\n        </div>\r\n        <div className=\"form-group mr-sm-2\">\r\n          <input\r\n            id=\"betodds\"\r\n            type=\"text\"\r\n            ref={(input) => { this.betodds = input }}\r\n            className=\"form-control\"\r\n            placeholder= \"Odds...\"\r\n            required />\r\n        </div>\r\n        <div className=\"form-group mr-sm-2\">\r\n          <input\r\n            id=\"gasfees\"\r\n            type=\"text\"\r\n            ref={(input) => { this.gasfees = input }}\r\n            className=\"form-control\"\r\n            placeholder=\"Gas fees...\"\r\n            defaultValue={250}\r\n            required />\r\n        </div>\r\n        <div className=\"form-group mr-sm-2\">\r\n          <input\r\n            id=\"adminfees\"\r\n            type=\"text\"\r\n            ref={(input) => { this.adminfees = input }}\r\n            className=\"form-control\"\r\n            placeholder=\"Admin fees...\"\r\n            defaultValue={250}\r\n            required />\r\n        </div>\r\n        <div className=\"form-group mr-sm-2\">\r\n          <input\r\n            id=\"genesiscost\"\r\n            type=\"text\"\r\n            ref={(input) => { this.genesiscostX = input }}\r\n            className=\"form-control\"\r\n            placeholder={0.02}\r\n            required />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary btn-block\">Create</button>\r\n      </form>;\r\n    \r\n    let resolvebutton;\r\n      resolvebutton =\r\n      <button\r\n      type=\"submit\" \r\n      id=\"resolver\" \r\n      className=\"btn btn-primary\"\r\n      > Resolve\r\n    </button>\r\n  \r\n  return (\r\n      <div className=\"container-fluid mt-5\">\r\n        <div className=\"row\" id=\"row\">\r\n          <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '500px' }}>\r\n            <div className=\"proposition mr-auto ml-auto\">\r\n              <p>&nbsp;</p>\r\n                {adminform}\r\n              <p>&nbsp;</p>\r\n              { this.props.bets.map((bet, key) => {\r\n                let thisbalance\r\n                let yesshare\r\n                let noshare\r\n                thisbalance = this.props.stats[bet._id]._betbalance / 10**18\r\n                yesshare = (bet._yesvotes - bet._genesisvotes) / ((bet._yesvotes - bet._genesisvotes) + (bet._novotes - (100 - bet._genesisvotes)))\r\n                noshare = (bet._novotes - (100 - bet._genesisvotes)) / ((bet._yesvotes - bet._genesisvotes) + (bet._novotes - (100 - bet._genesisvotes)))\r\n                if(bet._resolver == false) {\r\n                return(\r\n                  <div className=\"card mb-4\" key={key} >\r\n                    <div className=\"card-header\">\r\n                      <img\r\n                        className='mr-2'\r\n                        width='30'\r\n                        height='30'\r\n                        src={`data:image/png;base64,${new Identicon(bet._betaddress, 30).toString()}`}\r\n                      />\r\n                      <small className=\"text-muted\">{web3.utils.toChecksumAddress(bet._betaddress)}</small>\r\n                    </div>\r\n                    <ul id=\"betList\" className=\"list-group list-group-flush\">\r\n                      <li className=\"list-group-item\">\r\n                        <p id=\"pbold\">{bet._proposition}</p>\r\n                      </li>\r\n                      <li className=\"list-group-item\">\r\n                        <p id=\"psub\"> Balance on Yes: {(bet._yeswagers / 10 ** 18).toFixed(4)} </p>\r\n                        <p id=\"psub\"> Cost per: {((this.props.stats[bet._id]._genesiscost / 10**18) * this.props.stats[bet._id]._yesodds / 10000).toFixed(4)} </p>\r\n                        <p id=\"psub\"> Balance on No: {(bet._nowagers / 10 ** 18).toString()} </p>\r\n                        <p id=\"psub\"> Cost per: {((this.props.stats[bet._id]._genesiscost / 10**18) * this.props.stats[bet._id]._noodds / 10000).toFixed(4)} </p>\r\n                        <p id=\"psub\"> Implied odds on Yes: {(this.props.stats[bet._id]._yesodds / 100).toFixed(2) + \"%\"} </p>\r\n                        <p id=\"psub\"> Implied odds on No: {(this.props.stats[bet._id]._noodds / 100).toFixed(2) + \"%\"} </p>                        \r\n                      </li>\r\n                      {this.props.tests.map((test,key) => {\r\n                        if(test._betindex.toNumber() == bet._id.toNumber()\r\n                        && test._isyes == true)  {\r\n                        return (\r\n                        <div className=\"card m-1\" height=\"20\" >\r\n                          <div className= \"card-header d-flex align-items-center\" id = \"subcardyesheader\">\r\n                          <img\r\n                            className='mr-1'\r\n                            width='15'\r\n                            height='15'\r\n                            src={`data:image/png;base64,${new Identicon(test._player, 30).toString()}`}\r\n                          />\r\n                          <small className=\"text-muted\">wager ID: {test._specificindex.toString()}</small>\r\n                          <small className=\"text-muted\">{test._player.toString()}</small>\r\n                          </div>\r\n                          <ul className=\"list-group list-group-flush\"> \r\n                              <li className=\"list-group-item\">\r\n                              <p id=\"psub\">\r\n                                  <small>Votes purchased: {test._playeryesvotes.toString()}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Wagered: {(test._playeryesbalance / 10**18).toFixed(4)}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Price per vote: {(test._playeryesbalance / test._playeryesvotes / 10**18).toFixed(4)}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Share of winnings:{\" \"}\r\n                                    {(test._playeryesvotes / (bet._yesvotes - bet._genesisvotes) * 100).toFixed(2) + \"%\"}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Potential return:{\" \"}\r\n                                    {(test._playeryesvotes / (bet._yesvotes - bet._genesisvotes) * (bet._nowagers / 10 ** 18)\r\n                                    + test._playeryesbalance / 10**18).toFixed(4)}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small> Potential ROI:{\" \"}\r\n                                    {(((test._playeryesvotes / (bet._yesvotes - (bet._genesisvotes)) * (bet._nowagers / 10 ** 18)\r\n                                    + test._playeryesbalance / 10**18) / (test._playeryesbalance / 10**18) - 1) * 100 ).toFixed(2) + \"%\"}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small> Time:{\" \"}\r\n                                    {test._time.toString()}\r\n                                  </small>\r\n                              </p>\r\n                               {/* Revert buttons */}\r\n                              <form className=\"form-inline float-right mt-0 text-muted\" onSubmit={(event) => {\r\n                                event.preventDefault()\r\n                                const betID = bet._id\r\n                                const player = test._specificindex\r\n                                this.props.revertyes(betID, player)\r\n                                }}>\r\n                                <button\r\n                                type=\"submit\" \r\n                                id=\"yesreverter\" \r\n                                className=\"btn btn-primary\"\r\n                                > Revert </button>\r\n                              </form>\r\n                              </li>\r\n                          </ul>\r\n                        </div>\r\n                        ) \r\n                      }\r\n                    })\r\n                    }\r\n                    {this.props.tests.map((test,key) => {  \r\n                      if(test._betindex.toNumber() == bet._id.toNumber()\r\n                      && test._isno == true) {\r\n                        return (\r\n                          <div className=\"card m-1\" height=\"20\" >\r\n                          <div className= \"card-header d-flex align-items-center\" id = \"subcardnoheader\">\r\n                          <img\r\n                            className='mr-1'\r\n                            width='15'\r\n                            height='15'\r\n                            src={`data:image/png;base64,${new Identicon(test._player, 30).toString()}`}\r\n                          />\r\n                          <small className=\"text-muted\">wager ID: {test._specificindex.toString()}</small>\r\n                          <small className=\"text-muted\">{test._player.toString()}</small>\r\n                          </div>\r\n                          <ul className=\"list-group list-group-flush\"> \r\n                              <li className=\"list-group-item\">\r\n                              <p id=\"psub\">\r\n                                  <small>Votes purchased: {test._playernovotes.toString()}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Wagered: {(test._playernobalance / 10**18).toFixed(4)}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Price per vote: {(test._playernobalance / test._playernovotes / 10**18).toFixed(4)}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Share of winnings:{\" \"}\r\n                                    {(test._playernovotes / (bet._novotes - (100 - bet._genesisvotes)) * 100).toFixed(2) + \"%\"}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Potential return:{\" \"}\r\n                                    {(test._playernovotes / (bet._novotes - (100 - bet._genesisvotes)) * (bet._yeswagers / 10 ** 18)\r\n                                    + test._playernobalance / 10**18).toFixed(4)}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Potential ROI:{\" \"}\r\n                                    {(((test._playernovotes / (bet._novotes - (100 - bet._genesisvotes)) * (bet._yeswagers / 10 ** 18)\r\n                                    + test._playernobalance / 10**18) / (test._playernobalance / 10**18) - 1) * 100 ).toFixed(2) + \"%\"}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small> Time:{\" \"}\r\n                                    {test._time.toString()}\r\n                                  </small>\r\n                              </p>\r\n                              {/* Revert buttons */}\r\n                              <form className=\"form-inline float-right mt-0 text-muted\" onSubmit={(event) => {\r\n                                event.preventDefault()\r\n                                const betID = bet._id\r\n                                const player = test._specificindex\r\n                                this.props.revertno(betID, player)\r\n                                }}>\r\n                                <button\r\n                                type=\"submit\" \r\n                                id=\"noreverter\" \r\n                                className=\"btn btn-primary\"\r\n                                > Revert </button>\r\n                              </form>\r\n                              </li>\r\n                          </ul>\r\n                        </div>\r\n                          )\r\n                      }\r\n                    })\r\n                    }\r\n                      <li key={key} className=\"list-group-item\" id=\"betinputform\">\r\n                        <form className=\"form-inline float-right text-muted\" id=\"betinputform\" onSubmit={(event) => {\r\n                          event.preventDefault()\r\n                          const betyesAmountY = bet.betyesAmountX.value * 10**18\r\n                          const betyesAmount = betyesAmountY\r\n                          const betIndex = bet._id\r\n                          this.props.betyes(betIndex, betyesAmount)\r\n                        }}>\r\n                        <div id=\"betinputs\">\r\n                          Yes Votes: {(bet._yesvotes - bet._genesisvotes).toString()}\r\n                        </div>\r\n                          <div className=\"form-group mr-sm-2\">\r\n                            <input\r\n                              id=\"betinputs\"\r\n                              type=\"text\"\r\n                              ref={(input) => { bet.betyesAmountX = input }}\r\n                              className=\"form-control\"\r\n                              placeholder=\"amt...\"\r\n                              required />\r\n                          </div>\r\n                        <button \r\n                            type=\"submit\" \r\n                            id=\"submit\" \r\n                            className=\"btn btn-primary\"\r\n                        > Bet yes </button>\r\n                        </form>\r\n                        <form className=\"form-inline float-right mt-0 text-muted\" onSubmit={(event) => {\r\n                          event.preventDefault()\r\n                          const betnoAmountY = bet.betnoAmountX.value * 10**18\r\n                          const betnoAmount = betnoAmountY\r\n                          const betIndex = bet._id\r\n                          this.props.betno(betIndex, betnoAmount)\r\n                        }}>\r\n                        <div id=\"betinputs\">\r\n                          No Votes: {(bet._novotes - (100 - bet._genesisvotes)).toString()}\r\n                        </div>\r\n                          <div className=\"form-group mr-sm-2\">\r\n                            <input\r\n                              id=\"betinputs\"\r\n                              type=\"text\"\r\n                              ref={(input) => { bet.betnoAmountX = input }}\r\n                              className=\"form-control\"\r\n                              placeholder=\"amt...\"\r\n                              required />\r\n                          </div>\r\n                        <button \r\n                              type=\"submit\" \r\n                              id=\"submit\" \r\n                              className=\"btn btn-primary\"\r\n                          > Bet no</button>\r\n                        </form>\r\n                      </li>\r\n                      <li key={key} className=\"list-group-item\" id=\"betinputform\">\r\n                      <form className=\"form-inline float-right mt-0 text-muted\" onSubmit={(event) => {\r\n                          event.preventDefault()\r\n                          const betoutcome = bet.outcome.value\r\n                          const betIndex = bet._id\r\n                          this.props.setoracle(betIndex, betoutcome)\r\n                        }}>\r\n                        <div id=\"betinputs\">\r\n                          Outcome: {this.outcomeswitch(bet._outcome.toNumber())}\r\n                        </div>\r\n                        <div className=\"form-group mr-sm-2\">\r\n                            <input\r\n                              id=\"betinputs\"\r\n                              type=\"number\"\r\n                              ref={(input) => { bet.outcome = input }}\r\n                              className=\"form-control\"\r\n                              placeholder=\"Outcome...\"\r\n                              required />\r\n                        </div>\r\n                        <button \r\n                              type=\"submit\" \r\n                              id=\"submit\" \r\n                              className=\"btn btn-primary\"\r\n                          > Oracle </button>\r\n                        </form>\r\n                        <div>\r\n                        <form className=\"form-inline float-right mt-0 text-muted\" onSubmit={(event) => {\r\n                          event.preventDefault()\r\n                          const betoutcome = bet.outcome.value\r\n                          const betIndex = bet._id\r\n                          this.props.resolve(betIndex)\r\n                        }}>\r\n                          {resolvebutton}\r\n                        </form>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                )}\r\n              })}\r\n              \r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    ); //admin\r\n}\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\nimport Identicon from 'identicon.js';\r\nimport Web3 from 'web3';\r\nclass Main extends Component {\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n  }\r\n  outcomeswitch(param) {\r\n    switch(param) {\r\n      case 0:\r\n        return 'No';\r\n      case 1:\r\n        return 'Yes';\r\n      case 2:\r\n        return 'Push';\r\n      case 3:\r\n        return 'TBD';\r\n    }\r\n  }\r\n\r\n  render () {    \r\n    const web3 = window.web3\r\n    const accounts = web3.eth.getAccounts()\r\n    var i = 0;\r\n    let adminaddress;\r\n    adminaddress = '0x496764D595FBFC752FB73416759406e296b68851'; // revise to actual admin!\r\n    let adminform;\r\n\r\n    return (\r\n      <div className=\"container-fluid mt-5\">\r\n        <div className=\"row\" id=\"row\">\r\n          <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '500px' }}>\r\n            <div className=\"proposition mr-auto ml-auto\">\r\n              <p>&nbsp;</p>\r\n                {adminform}\r\n              <p>&nbsp;</p>\r\n              { this.props.bets.map((bet, key) => {\r\n                if(bet._resolver == false) {\r\n                return(\r\n                  <div className=\"card mb-4\" key={key} >\r\n                    <div className=\"card-header\">\r\n                      <img\r\n                        className='mr-2'\r\n                        width='30'\r\n                        height='30'\r\n                        src={`data:image/png;base64,${new Identicon(bet._betaddress, 30).toString()}`}\r\n                        />\r\n                        <small className=\"text-muted\">{web3.utils.toChecksumAddress(bet._betaddress)}</small>\r\n                    </div>\r\n                    <ul id=\"betList\" className=\"list-group list-group-flush\">\r\n                      <li className=\"list-group-item\">\r\n                        <p id=\"pbold\">{bet._proposition}</p>\r\n                      </li>\r\n                      <li className=\"list-group-item\">\r\n                        <p id=\"psub\"> Balance on Yes: {(bet._yeswagers / 10 ** 18).toFixed(4)} </p>\r\n                        <p id=\"psub\"> Cost per: {((this.props.stats[bet._id]._genesiscost / 10**18) * this.props.stats[bet._id]._yesodds / 10000).toFixed(4)} </p>\r\n                        <p id=\"psub\"> Balance on No: {(bet._nowagers / 10 ** 18).toString()} </p>\r\n                        <p id=\"psub\"> Cost per: {((this.props.stats[bet._id]._genesiscost / 10**18) * this.props.stats[bet._id]._noodds / 10000).toFixed(4)} </p>\r\n                        <p id=\"psub\"> Implied odds on Yes: {(this.props.stats[bet._id]._yesodds / 100).toFixed(2) + \"%\"} </p>\r\n                        <p id=\"psub\"> Implied odds on No: {(this.props.stats[bet._id]._noodds / 100).toFixed(2) + \"%\"} </p>                        \r\n                      </li>\r\n                      \r\n                      {this.props.tests.map((test,key) => {\r\n                        if(test._player == this.props.account && test._betindex.toNumber() == bet._id.toNumber()\r\n                        && test._isyes == true)  {\r\n                        i++\r\n                        return (\r\n                        <div className=\"card m-1\" height=\"20\" key={key}>\r\n                          <div className= \"card-header d-flex align-items-center\" id = \"subcardyesheader\">\r\n                          <img\r\n                            className='mr-1'\r\n                            width='15'\r\n                            height='15'\r\n                            src={`data:image/png;base64,${new Identicon(test._player, 30).toString()}`}\r\n                          />\r\n                          <small className=\"text-muted\">wager ID: {test._specificindex.toString()}</small>\r\n                          <small className=\"text-muted\"> <strong> &nbsp; &nbsp; (you own this bet!) </strong></small>\r\n                          </div>\r\n                          <ul className=\"list-group list-group-flush\"> \r\n                              <li className=\"list-group-item\">\r\n                              Your yes votes on this contract:\r\n                              <p id=\"psub\">\r\n                                  <small>Votes purchased: {test._playeryesvotes.toString()}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Wagered: {(test._playeryesbalance / 10**18).toFixed(4)}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Price per vote: {(test._playeryesbalance / test._playeryesvotes / 10**18).toFixed(4)}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Share of winnings:{\" \"}\r\n                                    {(test._playeryesvotes / (bet._yesvotes - bet._genesisvotes) * 100).toFixed(2) + \"%\"}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Potential return:{\" \"}\r\n                                    {(test._playeryesvotes / (bet._yesvotes - bet._genesisvotes) * (bet._nowagers / 10 ** 18)\r\n                                    + test._playeryesbalance / 10**18).toFixed(4)}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small> Potential ROI:{\" \"}\r\n                                    {(((test._playeryesvotes / (bet._yesvotes - (bet._genesisvotes)) * (bet._nowagers / 10 ** 18)\r\n                                    + test._playeryesbalance / 10**18) / (test._playeryesbalance / 10**18) - 1) * 100 ).toFixed(2) + \"%\"}\r\n                                  </small>\r\n                              </p>\r\n                              </li>\r\n                          </ul>\r\n                        </div>\r\n                        ) \r\n                      }\r\n                    })\r\n                    }\r\n                    {this.props.tests.map((test,key) => {  \r\n                      if(test._player == this.props.account && test._betindex.toNumber() == bet._id.toNumber()\r\n                      && test._isno == true) {\r\n                        return (\r\n                          <div className=\"card m-1\" height=\"20\" >\r\n                          <div className= \"card-header d-flex align-items-center\" id = \"subcardnoheader\">\r\n                          <img\r\n                            className='mr-1'\r\n                            width='15'\r\n                            height='15'\r\n                            src={`data:image/png;base64,${new Identicon(test._player, 30).toString()}`}\r\n                          />\r\n                          <small className=\"text-muted\">wager ID: {test._specificindex.toString()}</small>\r\n                          <small className=\"text-muted\"> <strong> &nbsp; &nbsp; (you own this bet!) </strong></small>\r\n                          </div>\r\n                          <ul className=\"list-group list-group-flush\"> \r\n                              <li className=\"list-group-item\">\r\n                              <p id=\"psub\">\r\n                                  <small>Votes purchased: {test._playernovotes.toString()}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Wagered: {(test._playernobalance / 10**18).toFixed(4)}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Price per vote: {(test._playernobalance / test._playernovotes / 10**18).toFixed(4)}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Share of winnings:{\" \"}\r\n                                    {(test._playernovotes / (bet._novotes - (100 - bet._genesisvotes)) * 100).toFixed(2) + \"%\"}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Potential return:{\" \"}\r\n                                    {(test._playernovotes / (bet._novotes - (100 - bet._genesisvotes)) * (bet._yeswagers / 10 ** 18)\r\n                                    + test._playernobalance / 10**18).toFixed(4)}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Potential ROI:{\" \"}\r\n                                    {(((test._playernovotes / (bet._novotes - (100 - bet._genesisvotes)) * (bet._yeswagers / 10 ** 18)\r\n                                    + test._playernobalance / 10**18) / (test._playernobalance / 10**18) - 1) * 100 ).toFixed(2) + \"%\"}\r\n                                  </small>\r\n                              </p>\r\n                              </li>\r\n                          </ul>\r\n                        </div>\r\n                          )\r\n                      }\r\n                    })\r\n                    }\r\n                    {/* feed of recent votes */}\r\n                    <li className=\"list-group-item\">\r\n                    Two most recent yes votes:\r\n                    {this.props.tests.map((test,key) => {\r\n                        if(test._betindex.toNumber() == bet._id.toNumber()\r\n                        && test._isyes == true \r\n                        && test._specificindex.toNumber() >= bet._yesplayers.toNumber() - 2 )  {\r\n                        return (\r\n                        <div className=\"card m-1\" height=\"20\" key={key}>\r\n                          <div className= \"card-header d-flex align-items-center\" id = \"subcardyesheader\">\r\n                          <img\r\n                            className='mr-1'\r\n                            width='15'\r\n                            height='15'\r\n                            src={`data:image/png;base64,${new Identicon(test._player, 30).toString()}`}\r\n                          />\r\n                          <small className=\"text-muted\">wager ID: {test._specificindex.toString()}</small>\r\n                          </div>\r\n                          <ul className=\"list-group list-group-flush\"> \r\n                              <li className=\"list-group-item\">\r\n                              <p id=\"psub\">\r\n                                  <small>Votes purchased: {test._playeryesvotes.toString()}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Wagered: {(test._playeryesbalance / 10**18).toFixed(4)}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Price per vote: {(test._playeryesbalance / test._playeryesvotes / 10**18).toFixed(4)}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Share of winnings:{\" \"}\r\n                                    {(test._playeryesvotes / (bet._yesvotes - bet._genesisvotes) * 100).toFixed(2) + \"%\"}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Potential return:{\" \"}\r\n                                    {(test._playeryesvotes / (bet._yesvotes - bet._genesisvotes) * (bet._nowagers / 10 ** 18)\r\n                                    + test._playeryesbalance / 10**18).toFixed(4)}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small> Potential ROI:{\" \"}\r\n                                    {(((test._playeryesvotes / (bet._yesvotes - (bet._genesisvotes)) * (bet._nowagers / 10 ** 18)\r\n                                    + test._playeryesbalance / 10**18) / (test._playeryesbalance / 10**18) - 1) * 100 ).toFixed(2) + \"%\"}\r\n                                  </small>\r\n                              </p>\r\n                              </li>\r\n                          </ul>\r\n                        </div>\r\n                        ) \r\n                      }\r\n                    })\r\n                    }\r\n                    </li>  \r\n                    <li className=\"list-group-item\">\r\n                    Two most recent no votes  \r\n                    {this.props.tests.map((test,key) => {  \r\n                      if(test._betindex.toNumber() == bet._id.toNumber()\r\n                      && test._isno == true && test._specificindex.toNumber() >= bet._noplayers.toNumber() - 2) {\r\n                        return (\r\n                          <div className=\"card m-1\" height=\"20\" key={key}>\r\n                          <div className= \"card-header d-flex align-items-center\" id = \"subcardnoheader\">\r\n                          <img\r\n                            className='mr-1'\r\n                            width='15'\r\n                            height='15'\r\n                            src={`data:image/png;base64,${new Identicon(test._player, 30).toString()}`}\r\n                          />\r\n                          <small className=\"text-muted\">wager ID: {test._specificindex.toString()}</small>\r\n                          </div>\r\n                          <ul className=\"list-group list-group-flush\"> \r\n                              <li className=\"list-group-item\">\r\n                              <p id=\"psub\">\r\n                                  <small>Votes purchased: {test._playernovotes.toString()}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Wagered: {(test._playernobalance / 10**18).toFixed(4)}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Price per vote: {(test._playernobalance / test._playernovotes / 10**18).toFixed(4)}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Share of winnings:{\" \"}\r\n                                    {(test._playernovotes / (bet._novotes - (100 - bet._genesisvotes)) * 100).toFixed(2) + \"%\"}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Potential return:{\" \"}\r\n                                    {(test._playernovotes / (bet._novotes - (100 - bet._genesisvotes)) * (bet._yeswagers / 10 ** 18)\r\n                                    + test._playernobalance / 10**18).toFixed(4)}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Potential ROI:{\" \"}\r\n                                    {(((test._playernovotes / (bet._novotes - (100 - bet._genesisvotes)) * (bet._yeswagers / 10 ** 18)\r\n                                    + test._playernobalance / 10**18) / (test._playernobalance / 10**18) - 1) * 100 ).toFixed(2) + \"%\"}\r\n                                  </small>\r\n                              </p>\r\n                              </li>\r\n                          </ul>\r\n                        </div>\r\n                          )\r\n                      }\r\n                    })\r\n                    } \r\n                    </li>\r\n                      <li key={key} className=\"list-group-item\" id=\"betinputform\">\r\n                        <form className=\"form-inline float-right text-muted\" id=\"betinputform\" onSubmit={(event) => {\r\n                          event.preventDefault()\r\n                          const betyesAmountY = bet.betyesAmountX.value * 10**18\r\n                          const betyesAmount = betyesAmountY\r\n                          const betIndex = bet._id\r\n                          this.props.betyes(betIndex, betyesAmount)\r\n                        }}>\r\n                        <div id=\"betinputs\">\r\n                          Yes Votes: {(bet._yesvotes - bet._genesisvotes).toString()}\r\n                        </div>\r\n                          <div className=\"form-group mr-sm-2\">\r\n                            <input\r\n                              id=\"betinputs\"\r\n                              type=\"text\"\r\n                              ref={(input) => { bet.betyesAmountX = input }}\r\n                              className=\"form-control\"\r\n                              placeholder=\"amt...\"\r\n                              required />\r\n                          </div>\r\n                        <button \r\n                            type=\"submit\" \r\n                            id=\"submit\" \r\n                            className=\"btn btn-primary\"\r\n                        > Bet yes </button>\r\n                        </form>\r\n                        <form className=\"form-inline float-right mt-0 text-muted\" onSubmit={(event) => {\r\n                          event.preventDefault()\r\n                          const betnoAmountY = bet.betnoAmountX.value * 10**18\r\n                          const betnoAmount = betnoAmountY\r\n                          const betIndex = bet._id\r\n                          this.props.betno(betIndex, betnoAmount)\r\n                        }}>\r\n                        <div id=\"betinputs\">\r\n                          No Votes: {(bet._novotes - (100 - bet._genesisvotes)).toString()}\r\n                        </div>\r\n                          <div className=\"form-group mr-sm-2\">\r\n                            <input\r\n                              id=\"betinputs\"\r\n                              type=\"text\"\r\n                              ref={(input) => { bet.betnoAmountX = input }}\r\n                              className=\"form-control\"\r\n                              placeholder=\"amt...\"\r\n                              required />\r\n                          </div>\r\n                        <button \r\n                              type=\"submit\" \r\n                              id=\"submit\" \r\n                              className=\"btn btn-primary\"\r\n                          > Bet no</button>\r\n                        </form>\r\n                      </li>\r\n                      <li className=\"list-group-item\">\r\n                        <p>Outcome: {this.outcomeswitch(bet._outcome.toNumber())}</p>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                )}\r\n              })}           \r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    ); //non-admin\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\nimport Identicon from 'identicon.js';\r\nimport Web3 from 'web3';\r\nclass Main extends Component {\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n  }\r\n  outcomeswitch(param) {\r\n    switch(param) {\r\n      case 0:\r\n        return 'No';\r\n      case 1:\r\n        return 'Yes';\r\n      case 2:\r\n        return 'Push';\r\n      case 3:\r\n        return 'TBD';\r\n    }\r\n  }\r\n\r\n  render () {    \r\n    const web3 = window.web3\r\n    const accounts = web3.eth.getAccounts()\r\n    var i = 0;\r\n    let adminaddress;\r\n    adminaddress = '0x496764D595FBFC752FB73416759406e296b68851'; // revise to actual admin!\r\n    let adminform;\r\n\r\n    return (\r\n      <div className=\"container-fluid mt-5\">\r\n        <div className=\"row\" id=\"row\">\r\n          <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '500px' }}>\r\n            <div className=\"proposition mr-auto ml-auto\">\r\n              <p>&nbsp;</p>\r\n                {adminform}\r\n              <p>&nbsp;</p>\r\n              { this.props.bets.map((bet, key) => {\r\n                if(bet._resolver == true && bet._outcome != 2 ) {\r\n                return(\r\n                  <div className=\"card mb-4\" key={key} >\r\n                    <div className=\"card-header\"\r\n                    height=\"55\">\r\n                      <img\r\n                        className='mr-2'\r\n                        width='30'\r\n                        height='30'\r\n                        src={`data:image/png;base64,${new Identicon(bet._betaddress, 30).toString()}`}\r\n                        />\r\n                        <small className=\"text-muted\">{web3.utils.toChecksumAddress(bet._betaddress)}</small>\r\n                    </div>\r\n                    <ul id=\"betList\" className=\"list-group list-group-flush\">\r\n                      <li className=\"list-group-item\">\r\n                        <p id=\"pbold\">{bet._proposition}</p>\r\n                      </li>\r\n                      <li className=\"list-group-item\">\r\n                        <p id=\"psub\"> Pre-fee pay out: {(bet._yeswagers / 10 ** 18 + bet._nowagers / 10 ** 18).toFixed(4)} </p>\r\n                      </li>\r\n                    <li className=\"list-group-item\">\r\n                    Winning yes votes!\r\n                    {this.props.tests.map((test,key) => {\r\n                        if(test._betindex.toNumber() == bet._id.toNumber()\r\n                        && test._isyes == true \r\n                        && bet._outcome == 1)  {\r\n                        return (\r\n                        <div className=\"card m-1\" height=\"20\" key={key}>\r\n                          <div className= \"card-header d-flex align-items-center\" id = \"subcardyesheader\">\r\n                          <img\r\n                            className='mr-1'\r\n                            width='15'\r\n                            height='15'\r\n                            src={`data:image/png;base64,${new Identicon(test._player, 30).toString()}`}\r\n                          />\r\n                        <small className=\"text-muted\"><small>Player: {test._player.toString()}</small></small>\r\n                                                 \r\n                          </div>\r\n                          <ul className=\"list-group list-group-flush\"> \r\n                              <li className=\"list-group-item\">\r\n                              <p id=\"psub\">\r\n                                  <small>Share of winnings:{\" \"}\r\n                                    {(test._playeryesvotes / (bet._yesvotes - bet._genesisvotes) * 100).toFixed(2) + \"%\"}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small> Pre-Fee ROI:{\" \"}\r\n                                    {(((test._playeryesvotes / (bet._yesvotes - (bet._genesisvotes)) * (bet._nowagers / 10 ** 18)\r\n                                    + test._playeryesbalance / 10**18) / (test._playeryesbalance / 10**18) - 1) * 100 ).toFixed(2) + \"%\"}\r\n                                  </small>\r\n                              </p>\r\n                              </li>\r\n                          </ul>\r\n                        </div>\r\n                        ) \r\n                      }\r\n                    })\r\n                    }\r\n                    </li>  \r\n                    <li className=\"list-group-item\">\r\n                    Winning no votes!\r\n                    {this.props.tests.map((test,key) => {  \r\n                      if(test._betindex.toNumber() == bet._id.toNumber()\r\n                      && test._isno == true && bet._outcome == 0) {\r\n                        return (\r\n                          <div className=\"card m-1\" height=\"20\" key={key}>\r\n                          <div className= \"card-header d-flex align-items-center\" id = \"subcardnoheader\">\r\n                          <img\r\n                            className='mr-1'\r\n                            width='15'\r\n                            height='15'\r\n                            src={`data:image/png;base64,${new Identicon(test._player, 30).toString()}`}\r\n                          />\r\n                          <small className=\"text-muted\"><small>Player: {test._player.toString()}</small></small>\r\n                          </div>\r\n                          <ul className=\"list-group list-group-flush\"> \r\n                              <li className=\"list-group-item\">\r\n                              <p id=\"psub\">\r\n                                  <small>Share of winnings:{\" \"}\r\n                                    {(test._playernovotes / (bet._novotes - (100 - bet._genesisvotes)) * 100).toFixed(2) + \"%\"}\r\n                                  </small>\r\n                              </p>\r\n                              <p id=\"psub\">\r\n                                  <small>Pre-Fee ROI:{\" \"}\r\n                                    {(((test._playernovotes / (bet._novotes - (100 - bet._genesisvotes)) * (bet._yeswagers / 10 ** 18)\r\n                                    + test._playernobalance / 10**18) / (test._playernobalance / 10**18) - 1) * 100 ).toFixed(2) + \"%\"}\r\n                                  </small>\r\n                              </p>\r\n                              </li>\r\n                          </ul>\r\n                        </div>\r\n                          )\r\n                      }\r\n                    })\r\n                    } \r\n                    </li>\r\n                      <li className=\"list-group-item\">\r\n                        <p>Outcome: {this.outcomeswitch(bet._outcome.toNumber())}</p>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                )}\r\n              })}           \r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    ); //non-admin\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport styled from 'styled-components';\r\nclass About extends Component {\r\n\r\n  render() {\r\n    const Wrap=styled.div`\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 5em;\r\n`\r\n \r\nconst Primary=styled.div`\r\n    max-width: 650px;\r\n    margin: 0 auto;\r\n    font-family: 'Sen', sans-serif;\r\n`\r\n\r\nconst Block = styled.div`\r\n  cursor: pointer;\r\n  background: transparent;\r\n  font-size: 16px;\r\n  border-radius: 3px;\r\n  border: 2px solid darkgray;\r\n  margin: 0 1em;\r\n  padding: 0.25em 1em;\r\n  margin-bottom: 3vh;\r\n  margin-top: 1vh;\r\n  transition: 0.5s all ease-out;\r\n  &:hover {\r\n    background-color: darkgray;\r\n    color: white;\r\n  }\r\n`;\r\nconst About = () => (\r\n    <Block>\r\n    <h1>About Contraqtual</h1>\r\n      <p>Contraqtual is a yes / no smart contract interface built on the AVAX blockchain network.</p>\r\n      <p>Users can buy votes on either 'yes' or 'no'. When to contract outcome is finalized, the \r\n        amount of votes owned as a percentage of the total votes on a given side entitles the owner \r\n        to their proportional share of all wagers on the losing side.</p>\r\n    <p>For example, imagine you own 10 out of 100 votes on the yes side. On the no side, $1,000 total\r\n      has been spent by various other players betting on no (i.e., purchasing no votes). If your \r\n      prediction is correct you will win $100 (10%, i.e. 10/100, of $1,000) plus whatever money you \r\n      laid to purchase your votes. If you paid $10 / vote, your account would receive $200 at closing\r\n       of the contract (your $100 wager, plus your share of the winnings)</p>\r\n    <p> Contraqtual contracts are paid out instantly, directly to whatever account you purchased votes\r\n      from. Every single thing you see here, aside from static text like this, is hosted on the AVAX\r\n      blockchain. </p>\r\n    <p id=\"pbold\"><u>IMPORTANT:</u></p>\r\n    <p id=\"pbold\">1) All contract <u>outcomes are determined by the administrator</u>. We do not use chainlink \r\n    or other oracle services to preserve cost and flexibility in the types of markets made.</p>\r\n    <p id=\"pbold\">2) A <u>fee of 5.0%</u> is charged on winning distrbutions</p>\r\n    <p ><strong>3) Do not place bets after an outcome has occured in real life or your bet will be\r\n    reverted! The <u>adminstrator can revert malicious bets </u></strong> Check out the 'revertyes' and\r\n     'revertno' functions on our <a href=\"https://snowtrace.io/address/0xB068Bd570247Bd1FFBabbD566C4EC44345245Ad9\">\r\n       <strong>verified smart contract</strong></a>. These prevent malicious bettors from \"flooding\" the \r\n       contract to take a bigger ownership of the losing side when an outcome is already known!</p>\r\n\r\n    </Block>\r\n)\r\n\r\nconst Pricing  = () => (\r\n    <Block>\r\n      <h1>Votes, odds, and pricing</h1>\r\n      <h4><u>Genesis pricing of votes</u></h4>\r\n      <p>When a contract is first published, the combined price of one yes vote plus one no vote \r\n        is 0.02 AVAX (~$1.00 USD as of January 2022). This is known as the Genesis Price, and it \r\n        can only be set at contract creation based on the initial odds. Initial odds of 50/50 \r\n        yes/no create a Genesis Price of 0.01 AVAX for yes and 0.01 AVAX for, and means the Genesis \r\n        Odds were 50/50 yes/no. If the initial odds were 66/33 yes/no, the Genesis Prices would \r\n        be 0.0133 AVAX for yes and 0.0066 for no.\r\n      <p></p>\r\n      <p id=\"pbold\"> *Your potential winnings = the number of votes you own as a percentage of\r\n      that side's total votes, multipliedby the amount of money wagered on the losing side*</p>\r\n\r\n      <p>Every vote you make is recorded and available for you to view - it will tell you exactly\r\n        how much of the winnings you are entitled to, and this will change dynamically as funds \r\n        flow into the contract until resolution.\r\n      </p>\r\n\r\n      </p>\r\n      <h4><u>Dynamic pricing of votes</u></h4>\r\n      <p>The price per vote changes dynamically as votes are purchased. Live prices are listed \r\n        directly on the contract form. Every time votes are purchased, the price is reset to: \r\n        Price Per Vote = Genesis Price * Odds. \r\n      </p>\r\n      <h4><u>Implied odds</u></h4>\r\n      <p>Odds on a contract are simply the percentage of yes and no votes out of the total votes \r\n        outstanding on either side. E.g., if there are 120 yes votes and 80 no votes, the implied \r\n        odds are 60% yes and 40% no</p>\r\n      <p id=\"pbold\"> *Odds have nothing to do with your potential winnings*</p>\r\n      <p > They are simply the calculation of the amount of votes on either side as a percentage\r\n        of all votes cast. They are a representation of the way money and votes have accumulated\r\n        in the contract. As one side accumulates more votes (and therefore money), the other side\r\n        stands to win more if they are correct. Similarly, as one side accumulates more votes, the\r\n        price per vote on the other side decreases, incentivizing new bettors to consider an\r\n        opposing view and \r\n      </p>\r\n    </Block>\r\n)\r\nconst Future  = () => (\r\n  <Block>\r\n    <h1>Future</h1>\r\n  <p>This site will continue to add new contracts, features, and UX. We look forward to an exicting\r\n    marketplace and will happily make markets for user-suggested contracts. Please reach out with\r\n    questions, comments, bugs, and suggestions to: <strong>admin@contraqtual.com</strong>!\r\n  </p>\r\n  </Block>\r\n)\r\n\r\n    return (\r\n    <Wrap>\r\n    <Primary>        \r\n      <About/>\r\n      <Pricing/>\r\n      <Future/>\r\n    </Primary>\r\n    </Wrap>   \r\n    );\r\n  }\r\n}\r\nexport default About;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport styled from 'styled-components';\r\nclass Verified extends Component {\r\n\r\n  render() {\r\n    const Wrap=styled.div`\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 5em;\r\n`\r\n \r\nconst Primary=styled.div`\r\n    max-width: 650px;\r\n    margin: 0 auto;\r\n    font-family: 'Sen', sans-serif;\r\n`\r\n\r\nconst Block = styled.div`\r\n  cursor: pointer;\r\n  background: transparent;\r\n  font-size: 16px;\r\n  border-radius: 3px;\r\n  border: 2px solid darkgray;\r\n  margin: 0 1em;\r\n  padding: 0.25em 1em;\r\n  margin-bottom: 3vh;\r\n  margin-top: 1vh;\r\n  transition: 0.5s all ease-out;\r\n  &:hover {\r\n    background-color: darkgray;\r\n    color: white;\r\n  }\r\n`;\r\nconst Verified = () => (\r\n    <Block>\r\n    <h1>Master contract</h1>\r\n      <p>Our contract is verified on Snowtrace!</p>\r\n      <p><a href=\"https://snowtrace.io/address/0xB068Bd570247Bd1FFBabbD566C4EC44345245Ad9\">view on snowtrace</a></p>\r\n    </Block>\r\n)\r\n\r\n\r\n\r\n    return (\r\n    <Wrap>\r\n    <Primary>        \r\n      <Verified/>\r\n    </Primary>\r\n    </Wrap>   \r\n    );\r\n  }\r\n}\r\nexport default Verified;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport styled from 'styled-components';\r\nclass Opensource extends Component {\r\n\r\n  render() {\r\n    const Wrap=styled.div`\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 5em;\r\n`\r\n \r\nconst Primary=styled.div`\r\n    max-width: 650px;\r\n    margin: 0 auto;\r\n    font-family: 'Sen', sans-serif;\r\n`\r\n\r\nconst Block = styled.div`\r\n  cursor: pointer;\r\n  background: transparent;\r\n  font-size: 16px;\r\n  border-radius: 3px;\r\n  border: 2px solid darkgray;\r\n  margin: 0 1em;\r\n  padding: 0.25em 1em;\r\n  margin-bottom: 3vh;\r\n  margin-top: 1vh;\r\n  transition: 0.5s all ease-out;\r\n  &:hover {\r\n    background-color: darkgray;\r\n    color: white;\r\n  }\r\n`;\r\nconst Opensource = () => (\r\n    <Block>\r\n    <h1>Every line of code is open sourced and available for your viewing!</h1>\r\n      <p>Our entire front and backend is published and available for viewing and commentary: </p>\r\n      <p><a href=\"https://github.com/JeanGalt1957/contraqtualmarkets\">check us out on <strong>github</strong>!</a></p>\r\n      <p>We are open to suggestions on every aspect of the site and look forward to hearing from you.\r\n          As noted on our <a href=\"/verified\">verified contract</a> page, you can view the published\r\n          contract on snowtrace, or as source code direct from github.\r\n      </p>\r\n      <p>We're also reachable at <strong>admin@contraqtual.com</strong> for any questions!</p>\r\n    </Block>\r\n)\r\n\r\n\r\n\r\n    return (\r\n    <Wrap>\r\n    <Primary>        \r\n      <Opensource/>\r\n    </Primary>\r\n    </Wrap>   \r\n    );\r\n  }\r\n}\r\nexport default Opensource;\r\n","import React, { Component } from 'react';\r\nimport Web3 from 'web3';\r\nimport './App.css';\r\nimport CreateBet from '../abis/CreateBet.json';\r\nimport Navbar from './Navbar';\r\nimport Main from './Main';\r\nimport Main_User from'./Main_User';\r\nimport Main_Paid from'./Main_Paid';\r\nimport About from './About';\r\nimport Verified from './Verified';\r\nimport Opensource from './Opensource';\r\nimport { Routes ,Route } from 'react-router-dom';\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\n\r\n\r\n\r\nclass App extends Component {\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n  }\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3\r\n    // Load account\r\n    const accounts = await web3.eth.getAccounts()\r\n    this.setState({ account: accounts[0] })\r\n    // Network ID\r\n    const networkId = await web3.eth.net.getId()\r\n    const networkData = CreateBet.networks[networkId]\r\n    if(networkData) {\r\n      const createBet = web3.eth.Contract(CreateBet.abi, networkData.address)\r\n      this.setState({ createBet })\r\n      const betCount = await createBet.methods.index().call()\r\n      const bettorCount = await createBet.methods.bettorindex().call()\r\n      this.setState({ betCount })\r\n      // Load Bets and stats\r\n\r\n      for (var i = 0; i <= betCount - 1; i++) {\r\n        const bet = await createBet.methods.bets(i).call()\r\n        const stat = await createBet.methods.stats(i).call()\r\n\r\n        this.setState({\r\n          bets: [...this.state.bets, bet],\r\n          stats: [...this.state.stats, stat],\r\n          \r\n        })\r\n\r\n      }\r\n\r\n      for (var ii = bettorCount - 1; ii >= 0; ii--) {\r\n        const test = await createBet.methods.tests(ii).call()\r\n\r\n        this.setState({\r\n          tests: [...this.state.tests, test],\r\n          \r\n        })\r\n\r\n      }\r\n      \r\n\r\n      \r\n\r\n      // Sort bets. Show highest voted bets first\r\n      this.setState({\r\n        bets: this.state.bets.sort((a,b) => (b._yesvotes + b._novotes) - (a._yesvotes + a._novotes)),\r\n      })\r\n      this.setState({ loading: false})\r\n    } else {\r\n      window.alert('CreateBet contract not deployed to detected network.')\r\n    }\r\n  }\r\n\r\n  createyesnobet(proposition, odds, gasfees, adminfees, genesiscost) {\r\n    this.setState({ loading: true })\r\n    this.state.createBet.methods.createyesnobet(proposition, odds, gasfees, adminfees, genesiscost).send({ from: this.state.account })\r\n    .once('receipt', (receipt) => {\r\n      this.setState({ loading: false })\r\n    })\r\n  }\r\n\r\n  betyes(id, betAmount) {\r\n    this.setState({ loading: true })\r\n    this.state.createBet.methods.betyes(id).send({ from: this.state.account, value: betAmount })\r\n    .once('receipt', (receipt) => {\r\n      this.setState({ loading: false })\r\n    })\r\n  }\r\n  \r\n  betno(id, betAmount) {\r\n    this.setState({ loading: true })\r\n    this.state.createBet.methods.betno(id).send({ from: this.state.account, value: betAmount })\r\n    .once('receipt', (receipt) => {\r\n      this.setState({ loading: false })\r\n    })\r\n  }\r\n\r\n  revertyes(id, player) {\r\n    this.setState({ loading: true })\r\n    this.state.createBet.methods.revertyes(id, player).send({ from: this.state.account})\r\n    .once('receipt', (receipt) => {\r\n      this.setState({ loading: false })\r\n    })\r\n  }\r\n  \r\n  revertno(id, player) {\r\n    this.setState({ loading: true })\r\n    this.state.createBet.methods.revertno(id, player).send({ from: this.state.account})\r\n    .once('receipt', (receipt) => {\r\n      this.setState({ loading: false })\r\n    })\r\n  }\r\n\r\n  setoracle(id, betoutcome) {\r\n    this.setState({ loading: true })\r\n    this.state.createBet.methods.setoracle(id, betoutcome).send({ from: this.state.account})\r\n    .once('receipt', (receipt) => {\r\n      this.setState({ loading: false })\r\n    })\r\n  }\r\n\r\n  resolve(id) {\r\n    this.setState({ loading: true })\r\n    this.state.createBet.methods.resolve(id).send({ from: this.state.account})\r\n    .once('receipt', (receipt) => {\r\n      this.setState({ loading: false })\r\n    })\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: '',\r\n      createBet: null,\r\n      betCount: 0,\r\n      bets: [],\r\n      stats: [],     \r\n      tests: [],\r\n      loading: true\r\n    }\r\n\r\n    this.createyesnobet = this.createyesnobet.bind(this)\r\n    this.betyes = this.betyes.bind(this)\r\n    this.betno = this.betno.bind(this)\r\n    this.revertyes = this.revertyes.bind(this)\r\n    this.revertno = this.revertno.bind(this)\r\n    this.setoracle = this.setoracle.bind(this)\r\n    this.resolve = this.resolve.bind(this)\r\n\r\n  }\r\n\r\n  render() {\r\n    \r\n    let adminaddress;\r\n    adminaddress = '0x12984A0D426F61318c24b180CA37F902410BBB34'; // revise to actual admin!\r\n    if(this.state.account == adminaddress) {\r\n    return (\r\n      <div>\r\n        <Navbar account={this.state.account} />\r\n        <Routes>\r\n        <Route exact path='/' element=\r\n           { this.state.loading\r\n            ? <div id=\"loader\" className=\"text-center mt-5\"><i><p>...Loading on-chain data from Avalanche...</p>\r\n             <p>...Make sure you have <a href=\"https://metamask.io/download/\">metamask</a> downloaded...</p>\r\n             <p>...and make sure its configured for Avalanche<a href=\"https://support.avax.network/en/articles/4626956-how-do-i-set-up-metamask-on-avalanche\">(here's how to set up if needed)...</a></p>\r\n             </i></div>\r\n            : <Main\r\n                account={this.state.account}\r\n                bets={this.state.bets}\r\n                stats={this.state.stats}\r\n                tests={this.state.tests}\r\n                createyesnobet={this.createyesnobet}\r\n                betyes={this.betyes}\r\n                betno={this.betno}\r\n                revertyes={this.revertyes}\r\n                revertno={this.revertno}\r\n                setoracle={this.setoracle}\r\n                resolve={this.resolve}\r\n              />\r\n          }/>\r\n          <Route exact path='/Paid_out' element=\r\n           { this.state.loading\r\n            ? <div id=\"loader\" className=\"text-center mt-5\"><i><p>...Loading on-chain data from Avalanche...</p>\r\n             <p>...Make sure you have <a href=\"https://metamask.io/download/\">metamask</a> downloaded...</p>\r\n             <p>...and make sure its configured for Avalanche<a href=\"https://support.avax.network/en/articles/4626956-how-do-i-set-up-metamask-on-avalanche\">(here's how to set up if needed)...</a></p>\r\n             </i></div>\r\n            : <Main_Paid\r\n                account={this.state.account}\r\n                bets={this.state.bets}\r\n                stats={this.state.stats}\r\n                tests={this.state.tests}\r\n                createyesnobet={this.createyesnobet}\r\n                betyes={this.betyes}\r\n                betno={this.betno}\r\n                revertyes={this.revertyes}\r\n                revertno={this.revertno}\r\n                setoracle={this.setoracle}\r\n                resolve={this.resolve}\r\n              />\r\n          }/>\r\n          <Route exact path='/about' element={<About/>} />\r\n          <Route exact path='/verified' element={<Verified/>} />\r\n          <Route exact path='/opensource' element={<Opensource/>} />\r\n        </Routes>\r\n      </div>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <div>\r\n        <Navbar account={this.state.account} />\r\n        <Routes>\r\n        <Route exact path='/' element=\r\n           { this.state.loading\r\n            ? <div id=\"loader\" className=\"text-center mt-5\"><i><p>...Loading on-chain data from Avalanche...</p>\r\n             <p>...Make sure you have <a href=\"https://metamask.io/download/\">metamask</a> downloaded...</p>\r\n             <p>...and make sure its configured for Avalanche<a href=\"https://support.avax.network/en/articles/4626956-how-do-i-set-up-metamask-on-avalanche\">(here's how to set up if needed)...</a></p>\r\n             </i></div>\r\n            : <Main_User\r\n                account={this.state.account}\r\n                bets={this.state.bets}\r\n                stats={this.state.stats}\r\n                tests={this.state.tests}\r\n                createyesnobet={this.createyesnobet}\r\n                betyes={this.betyes}\r\n                betno={this.betno}\r\n                revertyes={this.revertyes}\r\n                revertno={this.revertno}\r\n                setoracle={this.setoracle}\r\n                resolve={this.resolve}\r\n              />\r\n          }/>\r\n          <Route exact path='/Paid_out' element=\r\n           { this.state.loading\r\n            ? <div id=\"loader\" className=\"text-center mt-5\"><i><p>...Loading on-chain data from Avalanche...</p>\r\n             <p>...Make sure you have <a href=\"https://metamask.io/download/\">metamask</a> downloaded...</p>\r\n             <p>...and make sure its configured for Avalanche<a href=\"https://support.avax.network/en/articles/4626956-how-do-i-set-up-metamask-on-avalanche\">(here's how to set up if needed)...</a></p>\r\n             </i></div>\r\n            : <Main_Paid\r\n                account={this.state.account}\r\n                bets={this.state.bets}\r\n                stats={this.state.stats}\r\n                tests={this.state.tests}\r\n                createyesnobet={this.createyesnobet}\r\n                betyes={this.betyes}\r\n                betno={this.betno}\r\n                revertyes={this.revertyes}\r\n                revertno={this.revertno}\r\n                setoracle={this.setoracle}\r\n                resolve={this.resolve}\r\n              />\r\n          }/>\r\n          <Route exact path='/about' element={<About/>} />\r\n          <Route exact path='/verified' element={<Verified/>} />\r\n          <Route exact path='/opensource' element={<Opensource/>} />\r\n        </Routes>\r\n      </div>\r\n    );\r\n  }\r\n    \r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n<BrowserRouter basename={process.env.PUBLIC_URL}>\r\n<App />\r\n</BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}